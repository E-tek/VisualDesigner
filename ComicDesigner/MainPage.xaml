<Page
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:view="using:StyleMVVM.View"
    xmlns:comicDesigner="using:ComicDesigner"
    xmlns:designSurface="using:Glass.Design.WinRT.DesignSurface"
    xmlns:winRt="using:Glass.Design.WinRT"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity" xmlns:core="using:Microsoft.Xaml.Interactions.Core"    
    xmlns:Drag="using:Glass.Design.WinRT.DesignSurface.VisualAids.Drag"    
    x:Class="ComicDesigner.MainPage"
    view:ViewModel.Name="MainViewModel"    
    comicDesigner:SizeChange.IsEnabled="True"
    comicDesigner:SizeChange.ActualWidth="{Binding SurfaceWidth, Mode=TwoWay}"
    comicDesigner:SizeChange.ActualHeight="{Binding SurfaceHeight, Mode=TwoWay}"
    mc:Ignorable="d" d:DataContext="{d:DesignInstance comicDesigner:MainViewModel}">
    <Page.Resources>
        <ResourceDictionary>

            <comicDesigner:TypedTemplateSelector x:Key="TypedTemplateSelector"
                                             DefaultTemplateKey="DefaultTemplate" />

            <!--TEMPLATE TYPES (they are searched using their keys in the form of: Type:(NameOfType) by the TypedTemplateSelector -->


            <!-- ReSharper restore Xaml.RedundantResource -->



            <!-- ReSharper disable Xaml.RedundantResource -->
            <DataTemplate x:Key="Type:CanvasRectangle">
                <Rectangle Fill="DeepSkyBlue"  Stroke="CornflowerBlue" StrokeThickness="1" />
            </DataTemplate>
            <DataTemplate x:Key="Type:Ellipse">
                <Ellipse Fill="LightGreen"  Stroke="Green" StrokeThickness="1" />
            </DataTemplate>
            <DataTemplate x:Key="Type:Mario">
                <Image Source="Images/Mario.png" />
            </DataTemplate>
            <DataTemplate x:Key="DefaultTemplate">
                <Rectangle Fill="Blue" />
            </DataTemplate>



        </ResourceDictionary>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" >
        <designSurface:DesignSurface Background="White" 
                                     ItemTemplateSelector="{StaticResource TypedTemplateSelector}" 
                                     ItemsSource="{Binding Items}">
            <designSurface:DesignSurface.ItemContainerStyle>
                <Style TargetType="winRt:CanvasItemControl">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                    <Setter Property="comicDesigner:SetterValueBindingHelper.PropertyBinding">
                        <Setter.Value>
                            <comicDesigner:SetterValueBindingHelper>
                                <!-- ReSharper disable Xaml.BindingWithContextNotResolved -->
                                <comicDesigner:SetterValueBindingHelper 
									Type="Canvas"
									Property="Left"
									Binding="{Binding Left, Mode=TwoWay}" />

                                <comicDesigner:SetterValueBindingHelper 
									Type="Canvas"
									Property="Top"
									Binding="{Binding Top, Mode=TwoWay}" />
                                <comicDesigner:SetterValueBindingHelper                                 
									Property="Width"
									Binding="{Binding Width, Mode=TwoWay}" />
                                <comicDesigner:SetterValueBindingHelper 
									Property="Height"
									Binding="{Binding Height, Mode=TwoWay}" />
                                <!-- ReSharper restore Xaml.BindingWithContextNotResolved -->
                            </comicDesigner:SetterValueBindingHelper>
                        </Setter.Value>
                    </Setter>
                </Style>
            </designSurface:DesignSurface.ItemContainerStyle>
            <interactivity:Interaction.Behaviors>
                <core:EventTriggerBehavior>
                    <core:InvokeCommandAction Command="{Binding LoadItemsCommand}"/>
                </core:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>                        
        </designSurface:DesignSurface>
    </Grid>
</Page>
